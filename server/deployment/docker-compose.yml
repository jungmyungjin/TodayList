version: "3.8"
services:
  db:
    image: mariadb
    environment:
      MYSQL_ROOT_PASSWORD: ${TODAY_LIST_DB_PASSWORD}
      MYSQL_DATABASE: ${TODAY_LIST_DB_NAME}
      MYSQL_USER: ${TODAY_LIST_DB_USER}
      MYSQL_PASSWORD: ${TODAY_LIST_DB_PASSWORD}
    volumes:
      - db_data:/var/lib/mysql
    networks:
      - mynetwork
    ports:
      - "3306:3306"
    options: --health-cmd="healthcheck.sh --connect --innodb_initialized" --health-interval=10s --health-timeout=5s --health-retries=3

  nodejs:
    image: node:14
    build:
      context: ../
      dockerfile: ./deployment/nodejs/dockerfile

    volumes:
      - ..:/usr/src/app
    working_dir: /usr/src/app
    environment:
      TODAY_LIST_DB_HOST: db
      DB_PORT: 3306
      TODAY_LIST_DB_NAME: ${TODAY_LIST_DB_NAME}
      TODAY_LIST_DB_USER: ${TODAY_LIST_DB_USER}
      TODAY_LIST_DB_PASSWORD: ${TODAY_LIST_DB_PASSWORD}

    command: bash -c "npm install && npm start"
    depends_on:
      - db
    networks:
      - mynetwork
    ports:
      - ${TODAY_LIST_PORT}:${TODAY_LIST_PORT}

  nginx:
    image: nginx
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - /etc/ssl/certs/duckkuri.com.crt:/etc/ssl/certs/duckkuri.com.crt # SSL 인증서 파일 마운트
      - /etc/ssl/private/duckkuri.com.key:/etc/ssl/private/duckkuri.com.key # SSL 키 파일 마운트
    ports:
      - "80:80"
      - "443:443"
    depends_on:
      - nodejs
    networks:
      - mynetwork

networks:
  mynetwork:

volumes:
  db_data:

{"version":3,"file":"static/js/726.20a9c2e6.chunk.js","mappings":"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","sources":["webpack://client/./src/components/Login/Login.module.scss?4086","components/Login/Login.tsx","pages/LoginPage.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"Layout\":\"Login_Layout__oh5Nx\",\"LoginLayout\":\"Login_LoginLayout__AjWfj\",\"LoginTitle\":\"Login_LoginTitle__eYTAU\",\"LoginFormLayout\":\"Login_LoginFormLayout__uitXC\",\"LoginForm\":\"Login_LoginForm__gqGnA\",\"LoginInputLayout\":\"Login_LoginInputLayout__p9tjq\",\"LoginInput\":\"Login_LoginInput__BLZge\",\"RouteButtons\":\"Login_RouteButtons__J9ET3\",\"SiteLogin\":\"Login_SiteLogin__n6nJl\",\"KakaoLogin\":\"Login_KakaoLogin__2tHWm\",\"SignInButton\":\"Login_SignInButton__LUpBl\",\"LoginErrorReason\":\"Login_LoginErrorReason__32AhF\",\"horizontalShaking\":\"Login_horizontalShaking__Ze+dL\"};","import React, { useState } from 'react';\nimport { Link, useNavigate } from 'react-router-dom';\nimport styles from './Login.module.scss';\nimport keyboardIcon from 'assets/icons/LoginKeyboard.svg';\nimport userIcon from 'assets/icons/LoginUser.svg';\nimport kakaoImg from 'assets/images/kakao_login_large_wide.png';\nimport axios from 'axios';\n\nimport { fetchLogin, fetchLoginKakao } from 'services/apiService/apiService';\nimport { LoginProps } from 'types/Auth';\nimport { validateSinIn } from 'services/authService.ts/signUpService';\nimport SignUp from 'components/SignUp/SignUp';\n\nconst Login = () => {\n  const navigate = useNavigate();\n  const [loginErrorReason, setLoginErrorReason] = useState('');\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [animationKey, setAnimationKey] = useState(0);\n\n  const handleSubmitLogin = async (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n    setAnimationKey(animationKey + 1);\n    const validateErrorReason = validateSinIn({\n      email,\n      password,\n    } as LoginProps);\n    if (validateErrorReason) {\n      setLoginErrorReason(validateErrorReason);\n      return;\n    }\n    try {\n      const data = await fetchLogin({ email, password } as LoginProps);\n      navigate(`${process.env.REACT_APP_BASE_ROUTE}/`);\n    } catch (error: any) {\n      const [message, detail] = [\n        error.response?.data?.message,\n        error.response?.data?.detail,\n      ];\n      if (message === 'SignIn denied')\n        setLoginErrorReason('아이디 또는 비밀번호가 일치하지 않습니다.');\n    }\n  };\n\n  const handleClickKakaoLogin = () => {\n    fetchLoginKakao();\n    window.location.href = fetchLoginKakao();\n  };\n\n  return (\n    <div className={styles.Layout}>\n      <div className={styles.LoginLayout}>\n        <Link to=\"/\" className={styles.LoginTitle}>\n          Today list\n        </Link>\n        <div className={styles.LoginFormLayout}>\n          <form onSubmit={handleSubmitLogin} className={styles.LoginForm}>\n            <div className={styles.LoginInputLayout}>\n              {loginErrorReason === '' ? (\n                ''\n              ) : (\n                <span key={animationKey} className={styles.LoginErrorReason}>\n                  {loginErrorReason}\n                </span>\n              )}\n              <div className={styles.LoginInput}>\n                <img src={userIcon} alt=\"\" />\n                <input\n                  type=\"text\"\n                  placeholder=\"이메일\"\n                  autoFocus\n                  onChange={(e) => setEmail(e.target.value)}\n                  required\n                />\n              </div>\n              <div className={styles.LoginInput}>\n                <img src={keyboardIcon} alt=\"\" />\n                {/* 눈모양 추가 */}\n                <input\n                  type=\"password\"\n                  placeholder=\"비밀번호\"\n                  onChange={(e) => setPassword(e.target.value)}\n                  required\n                />\n              </div>\n            </div>\n            <div className={styles.RouteButtons}>\n              <button type=\"submit\" className={styles.SiteLogin}>\n                로그인\n              </button>\n              <button\n                type=\"button\"\n                className={styles.KakaoLogin}\n                onClick={handleClickKakaoLogin}\n              >\n                <img src={kakaoImg} alt=\"카카오로 로그인하기\" />\n              </button>\n            </div>\n          </form>\n        </div>\n        <Link\n          to={`${process.env.REACT_APP_BASE_ROUTE}/signUp`}\n          className={styles.SignInButton}\n        >\n          회원가입\n        </Link>\n      </div>\n    </div>\n  );\n};\n\nexport default Login;\n","import React from 'react';\nimport Header from 'components/Header/Header';\nimport Login from 'components/Login/Login';\n\nconst LoginPage = () => {\n  return (\n    <>\n      <Header />\n      <Login />\n    </>\n  );\n};\n\nexport default LoginPage;\n"],"names":["navigate","useNavigate","_useState","useState","_useState2","_slicedToArray","loginErrorReason","setLoginErrorReason","_useState3","_useState4","email","setEmail","_useState5","_useState6","password","setPassword","_useState7","_useState8","animationKey","setAnimationKey","handleSubmitLogin","_ref","_asyncToGenerator","_regeneratorRuntime","mark","_callee","event","validateErrorReason","_error$response","_error$response$data","_error$response2","_error$response2$data","message","wrap","_context","prev","next","preventDefault","validateSinIn","abrupt","fetchLogin","sent","concat","process","t0","response","data","detail","stop","_x","apply","arguments","_jsx","className","styles","children","_jsxs","Link","to","onSubmit","src","userIcon","alt","type","placeholder","autoFocus","onChange","e","target","value","required","keyboardIcon","onClick","fetchLoginKakao","window","location","href","_Fragment","Header","Login"],"sourceRoot":""}